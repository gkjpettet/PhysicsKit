<?xml version="1.0" encoding="UTF-8"?>
<RBProject version="2020r1" FormatVersion="2" MinIDEVersion="20070100">
<block type="Module" ID="1693147135">
 <ObjName>PKBinarySearchTreeNode</ObjName>
 <ObjContainerID>0</ObjContainerID>
 <IsClass>1</IsClass>
 <Interfaces>FKComparable</Interfaces>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>CompareTo</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1973114879</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CompareTo(other As Variant) As Integer</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine>' - Note: Part of the FKComparable interface.</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If other IsA PKBinarySearchTreeNode Then</SourceLine>
   <SourceLine>Return Comparable.CompareTo(PKBinarySearchTreeNode(other).Comparable)</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>Raise New InvalidArgumentException("Expected a PKBinarySearchTreeNode")</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>other As Variant</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>844951551</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(comparable As FKComparable)</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine>' Minimal constructor.</SourceLine>
   <SourceLine>'</SourceLine>
   <SourceLine>' - Parameter comparable: The comparable object.</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Constructor(comparable, Nil, Nil, Nil)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>comparable As FKComparable</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1825808383</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(comparable As FKComparable, parent As PKBinarySearchTreeNode, left As PKBinarySearchTreeNode, right As PKBinarySearchTreeNode)</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine>' Full constructor.</SourceLine>
   <SourceLine>'</SourceLine>
   <SourceLine>' - Parameter comparable: The comparable object.</SourceLine>
   <SourceLine>' - Parameter parent: The parent node.</SourceLine>
   <SourceLine>' - Parameter left: The left node.</SourceLine>
   <SourceLine>' - Parameter right: The right node.</SourceLine>
   <SourceLine>'</SourceLine>
   <SourceLine>' - Raises: NilObjectException if `comparable` is Nil.</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If comparable Is Nil Then Raise New NilObjectException(PKMessages.BINARY_SEARCH_TREE_NIL_COMPARABLE)</SourceLine>
   <SourceLine>Self.Comparable = comparable</SourceLine>
   <SourceLine>Self.Parent = parent</SourceLine>
   <SourceLine>Self.Left = left</SourceLine>
   <SourceLine>Self.Right = right</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>comparable As FKComparable, parent As PKBinarySearchTreeNode, left As PKBinarySearchTreeNode, right As PKBinarySearchTreeNode</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ToString</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1965869055</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ToString() As String</SourceLine>
   <SourceLine>Var toStringMethod As Introspection.MethodInfo = FoundationKit.GetMethod(Comparable, "ToString")</SourceLine>
   <SourceLine>If toStringMethod &lt;&gt; Nil Then</SourceLine>
   <SourceLine>Return toStringMethod.Invoke(Comparable)</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>Raise New UnsupportedOperationException("This comparable object does not implement the `ToString` method")</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>GetComparable</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>81356799</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetComparable() As FKComparable</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine>' Returns the comparable object.</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return Self.Comparable</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>FKComparable</ItemResult>
 </Method>
 <Method>
  <ItemName>IsLeftChild</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Returns True if this node is the left child of its parent node or False if it does not have a parent.</CodeDescription>
  <PartID>1065302015</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsLeftChild() As Boolean</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine>' Returns True if this node is the left child of its parent node or False if it does not have a parent.</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If Parent Is Nil Then Return False</SourceLine>
   <SourceLine>Return Parent.Left = Self</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Property>
  <ItemName>Comparable</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>The comparable data.</CodeDescription>
  <PartID>947912703</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Comparable As FKComparable</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Comparable As FKComparable</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Parent</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>The parent node of this node.</CodeDescription>
  <PartID>774094847</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Parent As PKBinarySearchTreeNode</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Parent As PKBinarySearchTreeNode</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Left</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>The node to the left. The left node is greater than this node.</CodeDescription>
  <PartID>837859327</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Left As PKBinarySearchTreeNode</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Left As PKBinarySearchTreeNode</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Right</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>The node to the right. The right node is greater than this node.</CodeDescription>
  <PartID>2293759</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Right As PKBinarySearchTreeNode</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Right As PKBinarySearchTreeNode</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Right</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
</RBProject>
